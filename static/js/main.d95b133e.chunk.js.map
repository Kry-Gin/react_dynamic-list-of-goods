{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","Error","status","statusText","json","get5First","sort","g1","g2","localeCompare","slice","catch","error","getRedGoods","filter","App","useState","setGoods","getGoodsFromServer","getGoods","newGoods","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8NAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEEC,MAAO,CAAEC,MAAOF,EAAKE,OACrB,UAAQ,OAHV,SAKGF,EAAKG,MAJDH,EAAKI,U,OCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,IAAMC,EAAY,WACvB,OAAOT,IACJE,MAAK,SAAAT,GAAK,OAAI,YAAIA,GAChBiB,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGb,KAAKe,cAAcD,EAAGd,SAC1CgB,MAAM,EAAG,MACXC,OAAM,SAAAC,GACL,MAAM,IAAIX,MAAMW,OAITC,EAAc,WACzB,OAAOjB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZyB,QAAO,SAAAvB,GAAI,MAAmB,QAAfA,EAAKE,YACtBkB,OAAM,SAAAC,GACL,MAAM,IAAIX,MAAMW,OCtBTG,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO3B,EAAP,KAAc4B,EAAd,KAEMC,EAAqB,SAACC,GAC1BA,IAAWrB,MAAK,SAAAsB,GAAQ,OAAIH,EAASG,OAGvC,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAmBtB,IAHpC,4BAQA,wBACE0B,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAML,EAAmBb,IAHpC,gCAQA,wBACEiB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAML,EAAmBL,IAHpC,4BAQA,cAAC,EAAD,CAAWxB,MAAOA,QCzCxBmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d95b133e.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: good.color }}\n        data-cy=\"good\"\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods]\n      .sort((g1, g2) => g1.name.localeCompare(g2.name))\n      .slice(0, 5))\n    .catch(error => {\n      throw new Error(error);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods\n      .filter(good => good.color === 'red'))\n    .catch(error => {\n      throw new Error(error);\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\ntype GetGoods = () => Promise<Good[]>;\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const getGoodsFromServer = (getGoods: GetGoods) => {\n    getGoods().then(newGoods => setGoods(newGoods));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => getGoodsFromServer(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => getGoodsFromServer(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => getGoodsFromServer(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}